process MISO = {
    untracked PSet maxEvents=
    {
        untracked int32 input = -1
    }


    source = PoolSource {
        untracked vstring fileNames = {
           'file:/somewhere/somefile.root'
        }
    }

    include "Configuration/EventContent/data/EventContent.cff"    
    module RECO = PoolOutputModule {
        untracked string fileName = 'file:isoTest.root'
        using FEVTSIMEventContent
    } 

#
#  keep only muon-related info here
#
    replace RECO.outputCommands += "drop *_*_*_*"
    replace RECO.outputCommands += RecoMuonRECO.outputCommands

    include "Configuration/StandardSequences/data/FakeConditions.cff"

#    service = MessageLogger {
#       untracked vstring destinations = { "cout" }
#       untracked vstring debugModules = { "muIsoDepositCtfTk", 
#              "muIsoDepositCalByAssociatorHits", 
#              "muIsoDepositCalByAssociatorTowers", 
#              "muIsoDepositCal" }
#       untracked vstring categories = { "RecoMuon" , "MuonIsolation" }
#
#       untracked PSet cout = { 
#         untracked string threshold = "DEBUG" 
#         untracked int32 lineLength  = 132
#         untracked bool noLineBreaks = true
#         untracked PSet DEBUG = {untracked int32 limit = 0 }
#         untracked PSet RecoMuon = { untracked int32 limit = 10000000}
#         untracked PSet MuonIsolation = { untracked int32 limit = 10000000}
#       }
#    }
    include "FWCore/MessageLogger/data/MessageLogger.cfi"

    #has everything(?) one needs
    # pick muIsolation sequence for "standard" iso reco for tracker and global muons
    # pick muIsolationAll to run everything configured (test mode only)
    include "RecoMuon/MuonIsolationProducers/data/muIsolation.cff"

    path p1 = { muIsolationAll }

    endpath outpath = {RECO}
}
